TASK

Task
Given an array, arr, of n integers, calculate the respective first quartile (Q1), second quartile (Q2), and third quartile (Q3). 
It is guaranteed that Q1, Q2, and Q3 are integers.

sample input:
9                       
3 7 8 5 12 14 21 13 18 

sample output:
6
12
16

CODE

#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'quartiles' function below.
#
# The function is expected to return an INTEGER_ARRAY.
# The function accepts INTEGER_ARRAY arr as parameter.
#
def quartile(a):
    n=len(a)
    mid=n//2
    if(n%2==0):
        res=(a[mid-1]+a[mid])//2
    else:
        res=a[mid]
    return res
def quartiles(arr):
    # Write your code here
    n=len(arr)
    a=sorted(arr)
    mid=n//2
    if(n%2==0):
        first=quartile(a[0:mid])
        middle=(a[mid]+a[mid-1])//2
        last=quartile(a[mid:n])
    else:
        first=quartile(a[0:mid])
        middle=a[mid]
        last=quartile(a[mid+1:n])
    return [int(first),int(middle),int(last)]        

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input().strip())

    data = list(map(int, input().rstrip().split()))

    res = quartiles(data)

    fptr.write('\n'.join(map(str, res)))
    fptr.write('\n')

    fptr.close()
